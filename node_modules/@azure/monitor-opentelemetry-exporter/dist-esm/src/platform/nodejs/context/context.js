// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import * as os from "os";
import { SDK_INFO } from "@opentelemetry/core";
import { SemanticResourceAttributes } from "@opentelemetry/semantic-conventions";
import { KnownContextTagKeys } from "../../../generated";
import * as ai from "../../../utils/constants/applicationinsights";
let instance = null;
/**
 * Azure Telemetry context.
 * @internal
 */
export class Context {
    constructor() {
        this.tags = {};
        this._loadDeviceContext();
        this._loadInternalContext();
    }
    _loadDeviceContext() {
        this.tags[KnownContextTagKeys.AiDeviceOsVersion] = os && `${os.type()} ${os.release()}`;
    }
    _loadInternalContext() {
        const { node } = process.versions;
        [Context.nodeVersion] = node.split(".");
        Context.opentelemetryVersion = SDK_INFO[SemanticResourceAttributes.TELEMETRY_SDK_VERSION];
        Context.sdkVersion = ai.packageVersion;
        this.tags[KnownContextTagKeys.AiInternalSdkVersion] = `node${Context.nodeVersion}:otel${Context.opentelemetryVersion}:ext${Context.sdkVersion}`;
    }
}
Context.sdkVersion = null;
Context.opentelemetryVersion = null;
Context.nodeVersion = "";
/**
 * Singleton Context instance.
 * @internal
 */
export function getInstance() {
    if (!instance) {
        instance = new Context();
    }
    return instance;
}
//# sourceMappingURL=context.js.map