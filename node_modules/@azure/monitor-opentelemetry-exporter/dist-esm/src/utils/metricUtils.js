// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
import { DataPointType } from "@opentelemetry/sdk-metrics-base";
import { createTagsFromResource } from "./resourceUtils";
/**
 * Metric to Azure envelope parsing.
 * @internal
 */
export function resourceMetricsToEnvelope(metrics, ikey) {
    let envelopes = [];
    const time = new Date();
    const instrumentationKey = ikey;
    const tags = createTagsFromResource(metrics.resource);
    metrics.scopeMetrics.forEach((scopeMetric) => {
        let baseData = {
            metrics: [],
            version: 2,
        };
        scopeMetric.metrics.forEach((metric) => {
            metric.dataPoints.forEach((dataPoint) => {
                var metricDataPoint = {
                    name: metric.descriptor.name,
                    value: 0,
                    dataPointType: "Aggregation",
                };
                if (metric.dataPointType == DataPointType.SINGULAR) {
                    metricDataPoint.value = dataPoint.value;
                    metricDataPoint.count = 1;
                }
                else {
                    metricDataPoint.value = dataPoint.value.sum;
                    metricDataPoint.count = dataPoint.value.count;
                }
                baseData.metrics.push(metricDataPoint);
            });
        });
        let envelope = {
            name: "Microsoft.ApplicationInsights.Metric",
            time: time,
            sampleRate: 100,
            instrumentationKey: instrumentationKey,
            tags: tags,
            version: 1,
            data: {
                baseType: "MetricData",
                baseData: Object.assign({}, baseData),
            },
        };
        envelopes.push(envelope);
    });
    return envelopes;
}
//# sourceMappingURL=metricUtils.js.map